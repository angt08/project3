{"ast":null,"code":"import _objectWithoutProperties from \"/Users/bengrzybowski/sei/week8/project3/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/bengrzybowski/sei/week8/project3/client/src/components/UpdateGiftListForm.jsx\";\nimport React, { Component } from 'react';\nexport default class UpdateGiftListForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: \"\",\n      image_link: \"\",\n      description: \"\",\n      due_date: \"\"\n    };\n\n    this.setFormData = () => {\n      if (this.props.giftLists.length) {\n        const _this$props$giftLists = this.props.giftLists.find(giftList => {\n          return giftList.id === parseInt(this.props.giftListId);\n        }),\n              title = _this$props$giftLists.title,\n              image_link = _this$props$giftLists.image_link,\n              description = _this$props$giftLists.description,\n              due_date = _this$props$giftLists.due_date,\n              otherData = _objectWithoutProperties(_this$props$giftLists, [\"title\", \"image_link\", \"description\", \"due_date\"]);\n\n        this.setState({\n          title,\n          image_link,\n          description,\n          due_date\n        });\n      }\n    };\n\n    this.handleChange = e => {\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      this.setState({\n        [name]: value\n      });\n      cons;\n    };\n  }\n\n  componentDidMount() {\n    this.setFormData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.giftLists !== this.props.giftLists) {\n      this.setFormData();\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          title = _this$state.title,\n          image_link = _this$state.image_link,\n          description = _this$state.description,\n          due_date = _this$state.due_date;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        this.props.updateGiftList(this.props.giftListId, this.state);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"title\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      id: \"title\",\n      value: title,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"image_link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"image link\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"image_link\",\n      id: \"image_link\",\n      value: image_link,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"description\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"description\",\n      id: \"description\",\n      value: description,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"due_date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Due Date\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"due_date\",\n      id: \"due_date\",\n      value: due_date,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/bengrzybowski/sei/week8/project3/client/src/components/UpdateGiftListForm.jsx"],"names":["React","Component","UpdateGiftListForm","state","title","image_link","description","due_date","setFormData","props","giftLists","length","find","giftList","id","parseInt","giftListId","otherData","setState","handleChange","e","target","name","value","cons","componentDidMount","componentDidUpdate","prevProps","render","preventDefault","updateGiftList"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nexport default class UpdateGiftListForm extends Component {\n  state = {\n    title: \"\",\n    image_link: \"\",\n    description: \"\",\n    due_date: \"\"\n  }\n\n  setFormData = () => {\n    if (this.props.giftLists.length) {\n      const {\n        title,\n        image_link,\n        description,\n        due_date,\n        ...otherData\n      } = this.props.giftLists.find(giftList => {\n        return giftList.id === parseInt(this.props.giftListId)\n      })\n      this.setState({\n        title,\n        image_link,\n        description,\n        due_date,\n      })\n    }\n  }\n\n  componentDidMount() {\n    this.setFormData();\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value })\n    cons\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.giftLists !== this.props.giftLists) {\n      this.setFormData();\n    }\n  }\n\n  render() {\n    const { title, image_link, description, due_date } = this.state;\n\n    return (\n      <div>\n        <form onSubmit={(e) => {\n          e.preventDefault();\n          this.props.updateGiftList(this.props.giftListId, this.state);\n        }}>\n          <label htmlFor=\"title\">title</label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            id=\"title\"\n            value={title}\n            onChange={this.handleChange}\n          />\n          <br />\n          <label htmlFor=\"image_link\">image link</label>\n          <input\n            type=\"text\"\n            name=\"image_link\"\n            id=\"image_link\"\n            value={image_link}\n            onChange={this.handleChange}\n          />\n          <br />\n          <label htmlFor=\"description\">description</label>\n          <input\n            type=\"text\"\n            name=\"description\"\n            id=\"description\"\n            value={description}\n            onChange={this.handleChange}\n          />\n          <br />\n          <label htmlFor=\"due_date\">Due Date</label>\n          <input\n            type=\"text\"\n            name=\"due_date\"\n            id=\"due_date\"\n            value={due_date}\n            onChange={this.handleChange}\n          />\n          <br />\n          <button>Submit</button>\n        </form>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}